var documenterSearchIndex = {"docs":
[{"location":"theory/#Theory-1","page":"Theory","title":"Theory","text":"","category":"section"},{"location":"theory/#","page":"Theory","title":"Theory","text":"This theory mostly follows that described by Yang[1], although we use linearly varying elements rather than constant elements.  ","category":"page"},{"location":"theory/#Stiffness-Matrix-1","page":"Theory","title":"Stiffness Matrix","text":"","category":"section"},{"location":"theory/#","page":"Theory","title":"Theory","text":"We assume that stiffness properties vary linearly between nodes:","category":"page"},{"location":"theory/#","page":"Theory","title":"Theory","text":"EI(eta) = EI_1 + (EI_2 - EI_1) eta","category":"page"},{"location":"theory/#","page":"Theory","title":"Theory","text":"The stiffness matrix is given by integrating (5.13, Yang):","category":"page"},{"location":"theory/#","page":"Theory","title":"Theory","text":"beginaligned\nk_ij = int_0^L EI f_i^primeprime f_j^primeprime dx \n  = Lint_0^1 EI(eta) f_i^primeprime(eta) f_j^primeprime(eta) deta \nendaligned","category":"page"},{"location":"theory/#","page":"Theory","title":"Theory","text":"The second derivative of the shape functions for beams are given as (5.10, Yang):","category":"page"},{"location":"theory/#","page":"Theory","title":"Theory","text":"beginaligned\nf_1^primeprime(eta) = frac1L^2left( -6 + 12 eta right)\nf_2^primeprime(eta) = frac1L left( -4 + 6 etaright)\nf_3^primeprime(eta) = frac1L^2left( 6 - 12 eta right)\nf_4^primeprime(eta) = frac1L left( -2 + 6 etaright)\nendaligned","category":"page"},{"location":"theory/#","page":"Theory","title":"Theory","text":"The integrals are worked out below.","category":"page"},{"location":"theory/#","page":"Theory","title":"Theory","text":"using Polynomials\n\nf1pp = Poly([-6.0, 12.0])\nf2pp = Poly([-4.0, 6.0])\nf3pp = Poly([6.0, -12.0])\nf4pp = Poly([-2.0, 6.0])\n\ne1 = Poly([1.0, -1.0]) \ne2 = Poly([0.0, 1.0])\n\nfunction coeff(f1, f2, L1, L2)\n\n    pint = polyint(e1*f1*f2)\n    c1 = polyval(pint, 1.0) - polyval(pint, 0.0)\n\n    pint = polyint(e2*f1*f2)\n    c2 = polyval(pint, 1.0) - polyval(pint, 0.0)\n\n    println(c1, \" \", c2, \" \", L1 + L2 - 1)\n    \nend\n\nL1 = 2.0\nL2 = 1.0\nL3 = 2.0\nL4 = 1.0\n\ncoeff(f1pp, f1pp, L1, L1)\ncoeff(f1pp, f2pp, L1, L2)\ncoeff(f1pp, f3pp, L1, L3)\ncoeff(f1pp, f4pp, L1, L4)\nprintln()\n\ncoeff(f2pp, f2pp, L2, L2)\ncoeff(f2pp, f3pp, L2, L3)\ncoeff(f2pp, f4pp, L2, L4)\nprintln()\n\ncoeff(f3pp, f3pp, L3, L3)\ncoeff(f3pp, f4pp, L3, L4)\nprintln()\n\ncoeff(f4pp, f4pp, L4, L4)","category":"page"},{"location":"theory/#","page":"Theory","title":"Theory","text":"Which produces the following output:","category":"page"},{"location":"theory/#","page":"Theory","title":"Theory","text":"6.0 6.0 3\n4.0 2.0 2\n-6.0 -6.0 3\n2.0 4.0 2\n\n3.0 1.0 1\n-4.0 -2.0 2\n1.0 1.0 1\n\n6.0 6.0 3\n-2.0 -4.0 2\n\n1.0 3.0 1","category":"page"},{"location":"theory/#","page":"Theory","title":"Theory","text":"Mathematically, we can express the (symmetric) stiffness matrix as:","category":"page"},{"location":"theory/#","page":"Theory","title":"Theory","text":"beginbmatrix\n    F_y1  M_y1  F_y2  M_y2\nendbmatrix\n= \nbeginbmatrix\n    frac6EI_1 + 6 EI_2L^3  frac4EI_1 + 2 EI_2L^2  frac-6EI_1 - 6 EI_2L^3 frac2EI_1 + 4 EI_2L^2\n    sym  frac3EI_1 + 1 EI_2L  frac-4EI_1 - 2 EI_2L^2 fracEI_1 + EI_2L\n    sym  sym  frac6EI_1 + 6 EI_2L^3 frac-2 EI_1  -4 EI_2L^2\n    sym  sym  sym frac EI_1 + 3 EI_2L\nendbmatrix\nbeginbmatrix\n    y_1  theta_y1  y_2  theta_y2\nendbmatrix","category":"page"},{"location":"theory/#","page":"Theory","title":"Theory","text":"and similarly in z.","category":"page"},{"location":"theory/#","page":"Theory","title":"Theory","text":"For axial (and torsional) stiffness, the stiffness matrix is given by (4.9, Yang): k_ij = L int_0^1 EA(eta) f_i^prime(eta) f_j^prime(eta) deta and the derivatives of the axial shape functions are:","category":"page"},{"location":"theory/#","page":"Theory","title":"Theory","text":"beginaligned\nf_1^prime = -1L\nf_2^prime = 1L\nendaligned","category":"page"},{"location":"theory/#","page":"Theory","title":"Theory","text":"We assume stiffness properties vary linearly yielding:","category":"page"},{"location":"theory/#","page":"Theory","title":"Theory","text":"beginbmatrix\n    F_x1  F_x2\nendbmatrix\n= fracEA_1 + EA_22 L\nbeginbmatrix\n    1  -1 \n    -1  1\nendbmatrix\nbeginbmatrix\n    x_1  x_2\nendbmatrix","category":"page"},{"location":"theory/#","page":"Theory","title":"Theory","text":"Torsion is the same form:","category":"page"},{"location":"theory/#","page":"Theory","title":"Theory","text":"beginbmatrix\n    M_x1  M_x2\nendbmatrix\n= fracGJ_1 + GJ_22 L\nbeginbmatrix\n    1  -1 \n    -1  1\nendbmatrix\nbeginbmatrix\n    theta_x1  theta_x2\nendbmatrix","category":"page"},{"location":"theory/#Distributed-Loads-1","page":"Theory","title":"Distributed Loads","text":"","category":"section"},{"location":"theory/#","page":"Theory","title":"Theory","text":"We assume that distributed loads vary linearly between nodes: p(eta) = p_1 + (p_2 - p_1) eta","category":"page"},{"location":"theory/#","page":"Theory","title":"Theory","text":"The equivalent concentrated loads are given by integrating (5.73, Yang):","category":"page"},{"location":"theory/#","page":"Theory","title":"Theory","text":"beginaligned\nF_i = int_0^L p(x) f_i(x) dx \n= L int_0^1 p(eta) f_i(eta) deta \nendaligned","category":"page"},{"location":"theory/#","page":"Theory","title":"Theory","text":"The shape functions for beams are given as (5.7, Yang):","category":"page"},{"location":"theory/#","page":"Theory","title":"Theory","text":"beginaligned\nf_1(eta) = 1 - 3eta^2 + 2 eta^3\nf_2(eta) = L left( eta - 2eta^2 + eta^3 right)\nf_3(eta) = 3eta^2 - 2 eta^3\nf_4(eta) = L left( - eta^2 + eta^3 right)\nendaligned","category":"page"},{"location":"theory/#","page":"Theory","title":"Theory","text":"The integrals are worked out below.","category":"page"},{"location":"theory/#","page":"Theory","title":"Theory","text":"\n\nf1 = Poly([1.0, 0.0, -3.0, 2.0])\nf2 = Poly([0.0, 1.0, -2.0, 1.0])\nf3 = Poly([0.0, 0.0, 3.0, -2.0])\nf4 = Poly([0.0, 0.0, -1.0, 1.0])\n\np1 = Poly([1.0, -1.0])  # p2 is 0\np2 = Poly([0.0, 1.0])  # p1 is 0\n\nfunction coeff(f)\n\n    pint = polyint(p1*f)\n    c1 = polyval(pint, 1.0) - polyval(pint, 0.0)\n\n    pint = polyint(p2*f)\n    c2 = polyval(pint, 1.0) - polyval(pint, 0.0)\n\n    println(c1, \" \", c2)\n    \nend\n\ncoeff(f1)\ncoeff(f2)\ncoeff(f3)\ncoeff(f4)","category":"page"},{"location":"theory/#","page":"Theory","title":"Theory","text":"0.35 0.15000000000000002\n0.050000000000000044 0.033333333333333326\n0.15000000000000002 0.35\n-0.033333333333333326 -0.04999999999999999","category":"page"},{"location":"theory/#","page":"Theory","title":"Theory","text":"mathematically:","category":"page"},{"location":"theory/#","page":"Theory","title":"Theory","text":"beginaligned\nF_y1 = L left frac720 p_1 + frac320 p_2 right\nM_y1 = L^2 left frac120 p_1 + frac130 p_2 right\nF_y2 = L left frac320 p_1 + frac720 p_2 right\nM_y2 = L^2 left -frac130 p_1 - frac120 p_2 right\nendaligned","category":"page"},{"location":"theory/#","page":"Theory","title":"Theory","text":"and similarly for z.","category":"page"},{"location":"theory/#","page":"Theory","title":"Theory","text":"The axial loads are similar, but simpler to calculate.  Using the shape functions for the axial loads:","category":"page"},{"location":"theory/#","page":"Theory","title":"Theory","text":"beginaligned\nf_1 = 1 - eta\nf_2 = eta\nendaligned","category":"page"},{"location":"theory/#","page":"Theory","title":"Theory","text":"The integral yields:","category":"page"},{"location":"theory/#","page":"Theory","title":"Theory","text":"beginaligned\nF_x1 = L left fracp_13 + fracp_26 right\nF_x2 = L left fracp_16 + fracp_23 right\nendaligned","category":"page"},{"location":"theory/#","page":"Theory","title":"Theory","text":"It is assumed that the distributed loads P_x are aligned with the center of twist (or close enough) so there are no distributed torsional loads.","category":"page"},{"location":"theory/#Inertial-Matrix-1","page":"Theory","title":"Inertial Matrix","text":"","category":"section"},{"location":"theory/#","page":"Theory","title":"Theory","text":"We assume that mass properties vary linearly between nodes: rho A(eta) = rho A_1 + (rho A_2 - rho A_1) eta","category":"page"},{"location":"theory/#","page":"Theory","title":"Theory","text":"The mass matrix integral is the same for bending and the axial direction (7.18 and 7.29, Yang):","category":"page"},{"location":"theory/#","page":"Theory","title":"Theory","text":"beginaligned\nm_ij = int_0^L rho A f_i f_j dx \n  = Lint_0^1 rho A(eta) f_i(eta) f_j(eta) deta \nendaligned","category":"page"},{"location":"theory/#","page":"Theory","title":"Theory","text":"The shape functions were given previously under Distributed Loads and the integrals are worked out below.","category":"page"},{"location":"theory/#","page":"Theory","title":"Theory","text":"\nf1 = Poly([1.0, 0.0, -3.0, 2.0])\nf2 = Poly([0.0, 1.0, -2.0, 1.0])\nf3 = Poly([0.0, 0.0, 3.0, -2.0])\nf4 = Poly([0.0, 0.0, -1.0, 1.0])\n\nA1 = Poly([1.0, -1.0])  # A2 is 0\nA2 = Poly([0.0, 1.0])  # A1 is 0\n\nfunction coeff(f1, f2, L1, L2)\n\n    pint = polyint(A1*f1*f2)\n    c1 = polyval(pint, 1.0) - polyval(pint, 0.0)\n\n    pint = polyint(A2*f1*f2)\n    c2 = polyval(pint, 1.0) - polyval(pint, 0.0)\n\n    println(c1*420, \" \", c2*420, \" \", L1 + L2 + 1)\n    \nend\n\nL1 = 0\nL2 = 1\nL3 = 0\nL4 = 1\n\ncoeff(f1, f1, L1, L1)\ncoeff(f1, f2, L1, L2)\ncoeff(f1, f3, L1, L3)\ncoeff(f1, f4, L1, L4)\nprintln()\n\ncoeff(f2, f2, L2, L2)\ncoeff(f2, f3, L2, L3)\ncoeff(f2, f4, L2, L4)\nprintln()\n\ncoeff(f3, f3, L3, L3)\ncoeff(f3, f4, L3, L4)\nprintln()\n\ncoeff(f4, f4, L4, L4)","category":"page"},{"location":"theory/#","page":"Theory","title":"Theory","text":"119.99999999999994 36.00000000000006 1\n15.000000000000039 6.999999999999952 2\n27.000000000000092 26.99999999999995 1\n-6.999999999999952 -6.000000000000002 2\n\n2.499999999999921 1.4999999999999947 3\n5.999999999999885 7.000000000000021 2\n-1.4999999999999947 -1.4999999999999947 3\n\n35.999999999999964 120.00000000000004 1\n-7.000000000000021 -14.999999999999993 2\n\n1.4999999999999947 2.5000000000000027 3","category":"page"},{"location":"theory/#","page":"Theory","title":"Theory","text":"Mathematically, we can express the (symmetric) inertial matrix as:","category":"page"},{"location":"theory/#","page":"Theory","title":"Theory","text":"beginbmatrix\n    F_y1  M_y1  F_y2  M_y2\nendbmatrix\n= \nfrac1420\nbeginbmatrix\n    (120 rho A_1 + 36 rho A_2) L  (15 rho A_1 + 7 rho A_2) L^2  (27 rho A_1 + 27 rho A_2) L  (-7 rho A_1 -6  rho A_2) L^2\n    sym  (25 rho A_1 + 15 rho A_2) L^3  (6 rho A_1 + 7 rho A_2) L^2  (-15 rho A_1 - 15 rho A_2) L^3\n    sym  sym  (36 rho A_1 + 120 rho A_2) L  (-7 rho A_1 -15 rho A_2) L^2\n    sym  sym  sym  (15 rho A_1 + 25 rho A_2) L^3\nendbmatrix\nbeginbmatrix\n    ddoty_1  ddottheta_y1  y_2  theta_y2\nendbmatrix","category":"page"},{"location":"theory/#","page":"Theory","title":"Theory","text":"and similarly for z.","category":"page"},{"location":"theory/#","page":"Theory","title":"Theory","text":"In the axial direction the integral is the same but the shape functions are simpler:","category":"page"},{"location":"theory/#","page":"Theory","title":"Theory","text":"beginaligned\nf_1 = 1 - eta\nf_2 = eta\nendaligned","category":"page"},{"location":"theory/#","page":"Theory","title":"Theory","text":"beginaligned\nm_ij = Lint_0^1 rho A(eta) f_i(eta) f_j(eta) deta \nendaligned","category":"page"},{"location":"theory/#","page":"Theory","title":"Theory","text":"f1 = Poly([1.0, -1.0])\nf2 = Poly([0.0, 1.0])\n\nA1 = Poly([1.0, -1.0])  # A2 is 0\nA2 = Poly([0.0, 1.0])  # A1 is 0\n\nfunction coeff(f1, f2)\n\n    pint = polyint(A1*f1*f2)\n    c1 = polyval(pint, 1.0) - polyval(pint, 0.0)\n\n    pint = polyint(A2*f1*f2)\n    c2 = polyval(pint, 1.0) - polyval(pint, 0.0)\n\n    println(c1, \" \", c2)\n    \nend\n\n\ncoeff(f1, f1)\ncoeff(f1, f2)\ncoeff(f2, f2)","category":"page"},{"location":"theory/#","page":"Theory","title":"Theory","text":"0.25 0.08333333333333337\n0.08333333333333337 0.08333333333333331\n0.08333333333333331 0.25","category":"page"},{"location":"theory/#","page":"Theory","title":"Theory","text":"The result is:","category":"page"},{"location":"theory/#","page":"Theory","title":"Theory","text":"beginbmatrix\n    F_x1  F_x2\nendbmatrix\n= L\nbeginbmatrix\n    frac14rho A_1 + frac112rho A_2  frac112rho A_1 + frac112rho A_2 \n    frac112rho A_1 + frac112rho A_2  frac112rho A_1 + frac14rho A_2\nendbmatrix\nbeginbmatrix\n    ddotx_1  ddotx_2\nendbmatrix","category":"page"},{"location":"theory/#","page":"Theory","title":"Theory","text":"Torsional inertia is of the same form: The result is:","category":"page"},{"location":"theory/#","page":"Theory","title":"Theory","text":"beginbmatrix\n    M_x1  M_x2\nendbmatrix\n= L\nbeginbmatrix\n    frac14rho J_1 + frac112rho J_2  frac112rho J_1 + frac112rho J_2 \n    frac112rho J_1 + frac112rho J_2  frac112rho J_1 + frac14rho J_2\nendbmatrix\nbeginbmatrix\n    ddottheta_x1  ddottheta_x2\nendbmatrix","category":"page"},{"location":"theory/#Displacement-1","page":"Theory","title":"Displacement","text":"","category":"section"},{"location":"theory/#","page":"Theory","title":"Theory","text":"Displacement is easily computed by solving the linear system (after applying boundary conditions):  K u = F","category":"page"},{"location":"theory/#Natural-frequencies-1","page":"Theory","title":"Natural frequencies","text":"","category":"section"},{"location":"theory/#","page":"Theory","title":"Theory","text":"Natural frequencies are found by solving the generalized eigenvalue problem (7.24, Yang) K - omega^2 Mu = 0 Solving the generalized eigenvalue problem gives lambda = omega^2.  We find the corresponding frequencies as: f = fracsqrtlambda2pi","category":"page"},{"location":"theory/#Coordinate-Systems-1","page":"Theory","title":"Coordinate Systems","text":"","category":"section"},{"location":"theory/#","page":"Theory","title":"Theory","text":"The coordinate system used by Yang is a simple one where, if x is in the x-direction, all forces and moments in that plane are denoted y.  However, this is non-standard.  The natural coordinate system (external) is compared to the one used by Yang (internal) in the figures below.","category":"page"},{"location":"theory/#","page":"Theory","title":"Theory","text":"x-y coordinates: (Image: )","category":"page"},{"location":"theory/#","page":"Theory","title":"Theory","text":"x-z coordinates: (Image: )","category":"page"},{"location":"theory/#","page":"Theory","title":"Theory","text":"From these figures we see that internally we must change the following inputs:","category":"page"},{"location":"theory/#","page":"Theory","title":"Theory","text":"beginaligned\nM_y int = -M_z ext\nM_z int = M_y ext\nI_y int = I_z ext\nI_z int = I_y ext\nk_theta_y int = k_theta_z ext\nk_theta_z int = k_theta_y ext\nendaligned","category":"page"},{"location":"theory/#","page":"Theory","title":"Theory","text":"The signs for the moments of inertia don't change as it involves squared quantities, and stiffness don't change sign as the stiffness is positive from bending in either direction.  The following outputs must also change:","category":"page"},{"location":"theory/#","page":"Theory","title":"Theory","text":"beginaligned\ntheta_y ext = theta_z int\ntheta_z ext = -theta_y int\nendaligned","category":"page"},{"location":"theory/#","page":"Theory","title":"Theory","text":"These transformations happen internally to allow us to use Yang's conventions more naturally, while the user need not worry about that and can use the standard external system.","category":"page"},{"location":"theory/#Axial-Stress-1","page":"Theory","title":"Axial Stress","text":"","category":"section"},{"location":"theory/#","page":"Theory","title":"Theory","text":"The computation of axial stress is actually independent from the finite element analysis and depends only on the loading and geometry.  Because we do not use the FEA analysis we use the natural (external) coordinate system directly.  First the forces and moments must be integrated along the beam starting from a free-end where the forces and moments are known (they are zero unless there is an external point load right at the tip).  Each segment of the beam must be integrated sequentially.  ","category":"page"},{"location":"theory/#","page":"Theory","title":"Theory","text":"A given beam segment is defined below:","category":"page"},{"location":"theory/#","page":"Theory","title":"Theory","text":"(Image: )","category":"page"},{"location":"theory/#","page":"Theory","title":"Theory","text":"We assume that the distributed load varies linearly and that separate distributions can exist in each direction (including axial in x).  External point forces and moments F_pt and M_pt can exist at each node in all three directions.  From this definition we can integrate to find the forces and moments throughout the beam.  Positive moments are defined using the right-hand rule (external coordinate system).","category":"page"},{"location":"theory/#","page":"Theory","title":"Theory","text":"<!– we define for moments on the left side of the beam using the right-hand rule according to the defined coordinate system. –>","category":"page"},{"location":"theory/#","page":"Theory","title":"Theory","text":"beginaligned\n    V_i+1 = V_i + F_pt_i + (x_i+1-x_i) int_0^1 q(eta) deta \n    M_i+1 = M_i + M_pt_i + (x_i+1-x_i) int_0^1 V(eta) deta\nendaligned","category":"page"},{"location":"theory/#","page":"Theory","title":"Theory","text":"If the distributed load is linear: q(eta) = q_i + eta(q_i+1 - q_i) then:","category":"page"},{"location":"theory/#","page":"Theory","title":"Theory","text":"beginaligned\n    V(eta) = V_i + F_pt_i + (x_i+1-x_i) int left(q_i + eta(q_i+1 - q_i)right) deta \n    = V_i + F_pt_i + (x_i+1-x_i) left(q_i eta + fraceta^22(q_i+1 - q_i)right)\n    M(eta) = M_i + M_pt_i + (x_i+1-x_i) int left( V_i + F_pt_i + (x_i+1-x_i) left(q_i eta + fraceta^22(q_i+1 - q_i)right) right) deta\n    = M_i + M_pt_i + (x_i+1-x_i)(V_i + F_pt_i) eta +    (x_i+1-x_i)^2 left(q_i fraceta^22 + fraceta^36(q_i+1 - q_i)right) \nendaligned","category":"page"},{"location":"theory/#","page":"Theory","title":"Theory","text":"Evaluating at the end point (eta = 1) and simplifying yields:","category":"page"},{"location":"theory/#","page":"Theory","title":"Theory","text":"beginaligned\n    V_i+1 = V_i + F_pt_i + (x_i+1-x_i) left(fracq_i + q_i+12 right) \n    M_i+1 = M_i + M_pt_i + (x_i+1-x_i)(V_i + F_pt_i) +  (x_i+1-x_i)^2 left(frac2 q_i + q_i+16right)\nendaligned","category":"page"},{"location":"theory/#","page":"Theory","title":"Theory","text":"This applies for all three forces: V_x V_y N_z.  For the moments, because this is a beam and we assume any axial loads act along the axis, the torsional loads T_z will not change excepting point torsion loads.  However, the bending moments M_y M_z are affected by the distributed loads q_y and q_z.  Explicitly using our coordinate sign conventions:","category":"page"},{"location":"theory/#","page":"Theory","title":"Theory","text":"beginaligned\n    N_x_i+1 = N_x_i + F_x_pt_i + (x_i+1-x_i) left(fracq_x_i + q_x_i+12 right) \n    V_y_i+1 = V_y_i + F_y_pt_i + (x_i+1-x_i) left(fracq_y_i + q_y_i+12 right) \n    V_z_i+1 = V_z_i + F_z_pt_i + (x_i+1-x_i) left(fracq_z_i + q_z_i+12 right) \n    T_x_i+1 = T_x_i + T_x_pt_i \n    M_y_i+1 = M_y_i + M_y_pt_i - (x_i+1-x_i)(V_z_i + F_z_pt_i) - (x_i+1-x_i)^2 left(frac2 q_z_i + q_z_i+16right)\n    M_z_i+1 = M_z_i + M_z_pt_i + (x_i+1-x_i)(V_y_i + F_y_pt_i) + (x_i+1-x_i)^2 left(frac2 q_y_i + q_y_i+16right)\nendaligned","category":"page"},{"location":"theory/#","page":"Theory","title":"Theory","text":"With known shear/moment distribution and stiffness properties we can compute the stress as follows (or use E(y z) = 1 to compute strain):","category":"page"},{"location":"theory/#","page":"Theory","title":"Theory","text":"sigma_xx(y z) = E(y z) left(-fracM_zEI_z y + fracM_yEI_y z + fracN_xEA right)","category":"page"},{"location":"theory/#","page":"Theory","title":"Theory","text":"[1]: Yang, T. Y., Finite element structural analysis, Prentice Hall, 1986.","category":"page"},{"location":"#BeamFEA.jl-1","page":"Home","title":"BeamFEA.jl","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Pages = [\n    \"theory.md\",\n]","category":"page"}]
}
